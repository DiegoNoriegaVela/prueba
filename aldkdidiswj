/* Esquema destino */
IF NOT EXISTS (SELECT 1 FROM sys.schemas WHERE name = 'sbp_lam')
    EXEC('CREATE SCHEMA sbp_lam AUTHORIZATION dbo;');
GO

/* Vista: Group Query (campos requeridos por SBP) */
CREATE OR ALTER VIEW sbp_lam.vw_GroupQuery AS
WITH Capabilities AS (
    /* Lista de capacidades por perfil (Menu/Recurso) */
    SELECT
        pmr.SistemaID,
        pmr.PerfilID,
        STRING_AGG(
            CONCAT(
                'Menu ', pmr.MenuID, ' - ', ISNULL(m.Descripcion,''),
                ' | Recurso ', pmr.RecursoID, ' - ', ISNULL(r.Descripcion,'')
            ),
            '; '
        ) WITHIN GROUP (ORDER BY pmr.MenuID, pmr.RecursoID) AS CapabilityFunctions
    FROM (
        /* DISTINCT para evitar duplicados si existieran */
        SELECT DISTINCT SistemaID, PerfilID, MenuID, RecursoID
        FROM security.MaePerfilMenuRecurso
    ) AS pmr
    LEFT JOIN security.MaeMenu    AS m ON m.SistemaID = pmr.SistemaID AND m.MenuID    = pmr.MenuID
    LEFT JOIN security.MaeRecurso AS r ON r.RecursoID = pmr.RecursoID
    GROUP BY pmr.SistemaID, pmr.PerfilID
)
SELECT
    p.SistemaID               AS SistemaID,         -- Roles/Groups/Profiles (parte 1)
    p.PerfilID                AS PerfilID,          -- Roles/Groups/Profiles (parte 2)
    p.Descripcion             AS Descriptions,      -- Descripci√≥n del perfil
    cap.CapabilityFunctions   AS CapabilityFunctions, -- Lista de capacidades
    CAST(NULL AS BIT)         AS Privileged         -- No almacenado en SIMP
FROM security.MaePerfil AS p
LEFT JOIN Capabilities  AS cap
       ON cap.SistemaID = p.SistemaID
      AND cap.PerfilID  = p.PerfilID;
GO